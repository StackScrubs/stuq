name: CD

on:
  push:
    branches: [ master ]

jobs:
  deploy-backend-to-docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./backend/
          tags: stuq/backend:latest
          push: true

  deploy-frontend-to-docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend/
          tags: stuq/frontend:latest
          push: true

  create-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.push.head.sha }}
          release_name: Release ${{ github.run_number }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: false

      - name: Upload release asset (Docker Compose config)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./docker-compose.prod.yml
          asset_name: docker-compose.prod.yml
          asset_content_type: text/yml

