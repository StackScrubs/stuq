package com.github.stackscrubs.stuq.backend.controller;

import java.util.ArrayList;
import java.util.List;

import com.github.stackscrubs.stuq.backend.model.jpa.Session;
import com.github.stackscrubs.stuq.backend.model.jpa.Submission;
import com.github.stackscrubs.stuq.backend.service.StudentService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.http.MediaType;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.ArraySchema;

/**
 * StudentController handles requests for the StudentService.
 * 
 * More documentation is generated by Swagger and may be found at @/swagger-ui/index.html
 */
@RestController
@RequestMapping(value = "/student")
@EnableAutoConfiguration
public class StudentController {
    
    @Autowired
    private StudentService studentService;

    @Operation(summary = "Get all submissions submitted by a student, using the student's token")
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Successfully retrieved all submissions", 
          content = { @Content(mediaType = "application/json", 
            array = @ArraySchema(schema = @Schema(implementation = Submission.class))) }),
        @ApiResponse(responseCode = "401", description = "Invalid token", content = @Content)
    })
    @GetMapping(value = "/submissions", produces = MediaType.APPLICATION_JSON_VALUE)
    public List<Submission> getSubmissions(Authentication authentication) {
        Session session = (Session)authentication.getPrincipal();
        int studentId = session.getUser().getId();
        
        return new ArrayList<>(this.studentService.getStudent(studentId).getSubmissions());
    }
}
